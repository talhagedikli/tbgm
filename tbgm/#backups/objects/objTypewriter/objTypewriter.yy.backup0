// 2022-11-04 14:40:11
#event properties (no comments/etc. here are saved)
parent_index = -1;
persistent = true;
uses_physics = false;

#event create
dialogues = []
queueIndex = 0;
active = true;
features =
{
	bgWidth: 20,
	bgHeight: room_height,
	bgX: room_width - bgWidth,
	bgY: 0,	
	bgColor: c_dkgray,
	bgAlpha: 0.7,
	x: bgX,
	y: bgY + bgHeight,
	fontColor: c_white,
	font: fntDialog
}

setActive = function(_active)
{
	active = _active;	
}

getActive = function()
{
	return active	
}

deactivate = function()
{
	active = false;	
}

addToQueue = function(txt)
{
	array_push(dialogues, txt);
}

typeNext = function()
{
	if (queueIndex >= array_length(dialogues)-1)
	{
		self.setActive(false);
		self.resetQueue();
		return
	}
	else
	{
		queueIndex += 1;
	}
}

resetQueue = function()
{
	queueIndex = 0;	
}

endTyping = function()
{
	if (!active) return;
	dialogues = [];
	queueIndex = 0;
}

type = function()
{
	
}

#event step


#event draw
if (active && array_length(dialogues) > 0)
{
	// Draw Background
	draw_set_color(features.bgColor);
	draw_set_alpha(features.bgAlpha);
	
	var _x = features.bgX;
	var _y = features.bgY;
	var _w = features.bgWidth;
	var _h = features.bgHeight;
	
	draw_rectangle(_x, _y, _x + _w, _y + _h, false);
	
	draw_set_color(c_white);
	draw_set_alpha(1)
	
	// Draw text
	draw_set_font(features.font);
	draw_set_color(features.fontColor);
	
	var _d = dialogues[queueIndex];
	
	draw_text(features.x, features.y, _d);	
	
	draw_set_color(c_white);
	draw_set_font(-1);
}



